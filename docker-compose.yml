services:
  postgres:
    image: postgres:latest
    container_name: his_postgres
    restart: always
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    ports:
      - "6666:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U ${DB_USERNAME}" ]
      interval: 5s
      timeout: 5s
      retries: 5

  his_app:
    build: .
    container_name: his_backend
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8181:8080"
    environment:
      ADMIN_EMAIL: ${ADMIN_EMAIL}
      ADMIN_PASSWORD: ${ADMIN_PASSWORD}
      API_KEY: ${API_KEY}
      API_SECRET: ${API_SECRET}
      APP_PASS: ${APP_PASS}
      APP_USERNAME: ${APP_USERNAME}
      CLOUD_NAME: ${CLOUD_NAME}
      DB_NAME: ${DB_NAME}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_USERNAME: ${DB_USERNAME}
      SECRET_SHA: ${SECRET_SHA}
      DB_HOST: postgres
      DB_PORT: 5432

volumes:
  postgres_data:
